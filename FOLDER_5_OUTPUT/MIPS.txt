.data
string_access_violation: .asciiz "Access Violation"
string_illegal_div_by_0: .asciiz "Illegal Division By Zero"
string_invalid_ptr_dref: .asciiz "Invalid Pointer Dereference"
.data
	global_i: .word 721
.data
	global_j: .word 721
.data
	global_p: .word 721
.data
	global_start: .word 721
.data
	global_end: .word 721
.data
	global_isPrime: .word 721
.data
	global_copyp: .word 721
.data
	global_copyisPrime: .word 721
.text
main:
	li $t0,2
	sw $t0,global_p
	li $t1,2
	sw $t1,global_start
	li $t2,100
	sw $t2,global_end
Label_1_start:
	lw $t4,global_p
	lw $t6,global_end
	li $t7,1
	add $t5,$t6,$t7
	blt $t4,$t5,Label_11_AssignOne
	bge $t4,$t5,Label_12_AssignZero
Label_11_AssignOne:
	li $t3,1
	j Label_10_end
Label_12_AssignZero:
	li $t3,0
	j Label_10_end
Label_10_end:
	beq $t3,$zero,Label_0_end
	li $t0,2
	sw $t0,global_i
	li $t1,2
	sw $t1,global_j
	li $t2,1
	sw $t2,global_isPrime
Label_3_start:
	lw $t4,global_i
	lw $t5,global_p
	blt $t4,$t5,Label_14_AssignOne
	bge $t4,$t5,Label_15_AssignZero
Label_14_AssignOne:
	li $t3,1
	j Label_13_end
Label_15_AssignZero:
	li $t3,0
	j Label_13_end
Label_13_end:
	beq $t3,$zero,Label_2_end
	li $t6,2
	sw $t6,global_j
Label_5_start:
	lw $t0,global_j
	lw $t1,global_p
	blt $t0,$t1,Label_17_AssignOne
	bge $t0,$t1,Label_18_AssignZero
Label_17_AssignOne:
	li $t7,1
	j Label_16_end
Label_18_AssignZero:
	li $t7,0
	j Label_16_end
Label_16_end:
	beq $t7,$zero,Label_4_end
	lw $t2,global_p
	sw $t2,global_copyp
Label_7_start:
	lw $t5,global_i
	lw $t6,global_j
	mul $t4,$t5,$t6
	lw $t7,global_copyp
	beq $t4,$t7,Label_20_AssignOne
	bne $t4,$t7,Label_21_AssignZero
Label_20_AssignOne:
	li $t3,1
	j Label_19_end
Label_21_AssignZero:
	li $t3,0
	j Label_19_end
Label_19_end:
	beq $t3,$zero,Label_6_end
	li $t0,0
	sw $t0,global_isPrime
	li $t1,0
	sw $t1,global_copyp
	j Label_7_start
Label_6_end:
	lw $t3,global_j
	li $t4,1
	add $t2,$t3,$t4
	sw $t2,global_j
	j Label_5_start
Label_4_end:
	lw $t6,global_i
	li $t7,1
	add $t5,$t6,$t7
	sw $t5,global_i
	j Label_3_start
Label_2_end:
	lw $t0,global_isPrime
	sw $t0,global_copyisPrime
Label_9_start:
	lw $t1,global_copyisPrime
	beq $t1,$zero,Label_8_end
	lw $t2,global_p
	move $a0,$t2
	li $v0,1
	syscall
	li $a0,32
	li $v0,11
	syscall
	li $t3,0
	sw $t3,global_copyisPrime
	j Label_9_start
Label_8_end:
	lw $t5,global_p
	li $t6,1
	add $t4,$t5,$t6
	sw $t4,global_p
	j Label_1_start
Label_0_end:
	li $v0,10
	syscall
